-- ALTER DATABASE university_main IS_TEMPLATE FALSE;
-- DROP DATABASE university_main;
-- DROP DATABASE university_archive;
-- DROP DATABASE university_backup;
-- DROP TABLESPACE student_data;
-- DROP TABLESPACE course_data;

CREATE DATABASE university_main
    OWNER postgres --CURRENT_USER //[42601] ERROR: syntax error at or near "CURRENT_USER"
    TEMPLATE template0
    ENCODING 'UTF8';

CREATE DATABASE university_archive
    CONNECTION LIMIT 50
    TEMPLATE template0;

CREATE DATABASE university_test
    IS_TEMPLATE TRUE
    CONNECTION LIMIT 10;

CREATE TABLESPACE student_data
    LOCATION 'C:/Learning code/data bases/2 week/data/students';

CREATE TABLESPACE course_data
    OWNER CURRENT_USER --CURRENT_USER //[42601] ERROR: syntax error at or near "CURRENT_USER"
    LOCATION 'C:/Learning code/data bases/2 week/data/courses';

CREATE DATABASE university_distributed
    TABLESPACE student_data
    ENCODING 'UTF8'; --ERROR:  encoding "LATIN9" does not match locale "kk-KZ"
                     --DETAIL:  The chosen LC_CTYPE setting requires encoding "UTF8".

--TASK 2

CREATE TABLE students(
    student_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    phone CHAR(15),
    date_of_birth DATE,
    enrollment_date DATE,
    gpa DECIMAL(10, 2),
    is_active BOOLEAN,
    graduation_year SMALLINT
);

CREATE TABLE professors(
    professor_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    email VARCHAR(100),
    office_number VARCHAR(20),
    hire_date DATE,
    salary DECIMAL(20, 2),
    is_tenured BOOLEAN,
    years_experience INT
);

CREATE TABLE courses(
    course_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    course_code CHAR(8),
    course_title VARCHAR(100),
    description TEXT,
    credits SMALLINT,
    max_enrollment INT,
    course_fee DECIMAL(10, 2),
    is_online BOOLEAN,
    created_at TIMESTAMP WITHOUT TIME ZONE
);

CREATE TABLE class_schedule(
    schedule_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    course_id INT,
    professor_id INT,
    classroom VARCHAR(20),
    class_date DATE,
    start_time TIME WITHOUT TIME ZONE,
    end_time TIME WITHOUT TIME ZONE,
    duration INTERVAL
);

CREATE TABLE student_records(
    record_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    student_id INT,
    course_id INT,
    semester VARCHAR(20),
    year INT,
    grade CHAR(2),
    attendance_percentage DECIMAL(10, 1),
    submission_timestamp TIMESTAMP WITH TIME ZONE,
    last_updated TIMESTAMP WITH TIME ZONE
);

ALTER TABLE class_schedule
ADD CONSTRAINT cs_fk1 FOREIGN KEY (course_id) REFERENCES courses(course_id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE class_schedule
ADD CONSTRAINT cs_fk2 FOREIGN KEY (professor_id) REFERENCES professors(professor_id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE student_records
ADD CONSTRAINT sr_fk1 FOREIGN KEY (student_id) REFERENCES students(student_id) ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE student_records
ADD CONSTRAINT sr_fk2 FOREIGN KEY (course_id) REFERENCES courses(course_id) ON UPDATE CASCADE ON DELETE CASCADE;

--TASK 3

ALTER TABLE students
    ADD COLUMN middle_name VARCHAR(30),
    ADD COLUMN student_status VARCHAR(30),
    ALTER COLUMN phone TYPE VARCHAR(20),
    ALTER COLUMN student_status SET DEFAULT 'ACTIVE',
    ALTER COLUMN gpa SET DEFAULT 0.00;



ALTER TABLE professors
    ADD COLUMN department_code CHAR(5),
    ADD COLUMN research_area TEXT,
    ALTER COLUMN years_experience TYPE SMALLINT,
    ALTER COLUMN is_tenured SET DEFAULT false,
    ADD COLUMN last_promotion_date DATE;



ALTER TABLE courses
    ADD COLUMN prerequisite_course_id INT,
    ADD COLUMN difficulty_level SMALLINT,
    ALTER COLUMN course_code TYPE VARCHAR(10),
    ALTER COLUMN credits SET DEFAULT 3,
    ADD COLUMN lab_required BOOLEAN DEFAULT false;



ALTER TABLE class_schedule
    ADD COLUMN room_capacity INT,
    DROP COLUMN duration,
    ADD COLUMN session_type VARCHAR(15),
    ALTER COLUMN classroom TYPE VARCHAR(30),
    ADD COLUMN equipment_needed TEXT;



ALTER TABLE student_records
    ADD COLUMN extra_credit_points DECIMAL(10, 1),
    ALTER COLUMN grade TYPE VARCHAR(5),
    ALTER COLUMN extra_credit_points SET DEFAULT 0.0,
    ADD COLUMN final_exam_date DATE,
    DROP COLUMN last_updated;



--TASK 4

CREATE TABLE departments(
    department_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    department_name VARCHAR(100),
    department_code CHAR(5),
    building VARCHAR(50),
    phone VARCHAR(15),
    budget DECIMAL(20, 2),
    established_year INT
);

CREATE TABLE library_books(
    book_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    isbn CHAR(13),
    title VARCHAR(200),
    author VARCHAR(100),
    publisher VARCHAR(100),
    publication_date DATE,
    price DECIMAL(10, 2),
    is_available BOOLEAN,
    acquisition_timestamp TIMESTAMP WITHOUT TIME ZONE
);

CREATE TABLE student_book_loans(
    loan_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    student_id INT REFERENCES students(student_id) ON DELETE CASCADE ON UPDATE CASCADE,
    book_id INT REFERENCES library_books(book_id) ON DELETE CASCADE ON UPDATE CASCADE,
    loan_date DATE,
    due_date DATE,
    return_date DATE,
    fine_amount DECIMAL(10, 2),
    loan_status VARCHAR(20)
);

--TASK 4.2

ALTER TABLE professors
ADD COLUMN department_id INT;

ALTER TABLE students
ADD COLUMN adviser_id INT;

ALTER TABLE courses
ADD COLUMN department_id INT;

CREATE TABLE grade_scale(
    grade_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    letter_grade CHAR(2),
    min_percentage DECIMAL(10, 1),
    max_percentage DECIMAL(10, 1),
    gpa_points DECIMAL(10, 2)
);

CREATE TABLE semester_calendar(
    semester_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    semester_name VARCHAR(20),
    academic_year INT,
    start_date DATE,
    end_date DATE,
    registration_deadline TIMESTAMP WITH TIME ZONE,
    is_current BOOLEAN
);

--TASK 5

DROP TABLE IF EXISTS student_book_loans;
DROP TABLE IF EXISTS library_books;
DROP TABLE IF EXISTS grade_scale;

CREATE TABLE grade_scale(
    grade_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    letter_grade CHAR(2),
    min_percentage DECIMAL(10, 1),
    max_percentage DECIMAL(10, 1),
    gpa_points DECIMAL(10, 2),
    description TEXT
);

DROP TABLE IF EXISTS semester_calendar CASCADE;

CREATE TABLE semester_calendar(
    semester_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
    semester_name VARCHAR(20),
    academic_year INT,
    start_date DATE,
    end_date DATE,
    registration_deadline TIMESTAMP WITH TIME ZONE,
    is_current BOOLEAN
);

--TASK 5.2
ALTER DATABASE university_test IS_TEMPLATE FALSE;
DROP DATABASE IF EXISTS university_test;
DROP DATABASE IF EXISTS university_distributed;

ALTER DATABASE university_main IS_TEMPLATE TRUE;
CREATE DATABASE university_backup
    TEMPLATE university_main;
