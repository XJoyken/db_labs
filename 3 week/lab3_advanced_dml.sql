-- PART A

CREATE DATABASE advanced_lab;

CREATE TABLE employees(
    emp_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    department VARCHAR(100),
    salary INT,
    hire_date DATE,
    status VARCHAR(20) DEFAULT 'Active'
);

CREATE TABLE departments(
    dept_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    dept_name VARCHAR(100),
    budget INT,
    manager_id INT
);

CREATE TABLE projects(
    project_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_name VARCHAR(100),
    dept_id INT,
    start_date DATE,
    end_date DATE,
    budget INT
);

-- PART B

INSERT INTO employees(emp_id, first_name, last_name, department)
VALUES (
        1,
        'Emily',
        'Johnson',
        'Computer Science'
       );

INSERT INTO employees(emp_id, first_name, last_name, salary, status)
VALUES (
        2,
        'Michael',
        'Smith',
        DEFAULT,
        DEFAULT
       );

INSERT INTO departments(dept_name)
VALUES
        ('Computer Science'),
        ('Mathematics'),
        ('Physics');

INSERT INTO employees(emp_id, first_name, last_name, hire_date, salary)
VALUES (
        DEFAULT,
        'Sophia',
        'Brown',
        CURRENT_DATE,
        50000 * 1.1
       );

CREATE TEMPORARY TABLE temp_employees(
    emp_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(100),
    last_name VARCHAR(100),
    department VARCHAR(100),
    salary INT,
    hire_date DATE,
    status VARCHAR(20) DEFAULT 'Active'
);

INSERT INTO temp_employees
SELECT *
FROM employees
WHERE department = 'IT';

-- PART C

UPDATE employees
SET salary = salary * 1.1;

UPDATE employees
SET status = 'Senior'
WHERE salary > 60000
  AND hire_date < '2020-01-01';

UPDATE employees
SET department = CASE
    WHEN salary > 80000 THEN 'Management'
    WHEN salary BETWEEN 50000 AND 80000 THEN 'Senior'
    ELSE 'Junior'
END;

UPDATE employees
SET department = DEFAULT
WHERE status = 'Inactive';

UPDATE departments
SET budget = sub.avg_salary * 1.2
FROM (
    SELECT department, AVG(salary) AS avg_salary
    FROM employees
    GROUP BY department
     ) sub
WHERE dept_name = sub.department;

UPDATE employees
SET salary = salary * 1.15,
    status = 'Promoted'
WHERE department = 'Sales';

-- PART D

DELETE FROM employees
WHERE status = 'Terminated';

DELETE FROM employees
WHERE salary < 40000
  AND hire_date > '2023-01-01'
  AND department IS NULL;

DELETE FROM departments
WHERE dept_name NOT IN ( --The dept_id is in the task, but in the employees table, the department column stores the names of department, not their IDs
    SELECT DISTINCT employees.department
    FROM employees
    WHERE department IS NOT NULL
    );

DELETE FROM projects
WHERE end_date < '2023-01-01'
RETURNING *;

-- PART E

INSERT INTO employees(first_name, last_name, department, salary)
VALUES (
        'Daniel',
        'Miller',
        NULL,
        NULL
       );

UPDATE employees
SET department = 'Unassigned'
WHERE department IS NULL;

DELETE FROM employees
WHERE salary IS NULL
   OR department IS NULL;

-- PART F
INSERT INTO employees(first_name, last_name)
VALUES (
        'Olivia',
        'Davis'
       )
RETURNING emp_id,
    first_name || ' ' || last_name AS full_name;

UPDATE employees
SET salary = salary + 5000
WHERE department = 'IT'
RETURNING
    emp_id,
    salary - 5000 AS old_salary,
    salary AS new_salary;

DELETE FROM employees
WHERE hire_date < '2020-01-01'
RETURNING *;

-- PART G
INSERT INTO employees(first_name, last_name)
SELECT 'James', 'Wilson'
WHERE NOT EXISTS(
    SELECT 1
    FROM employees
    WHERE first_name = 'James'
      AND last_name = 'Wilson'
);

UPDATE employees e
SET salary = salary *
    CASE
        WHEN d.budget > 100000 THEN 1.1
        ELSE 1.05
    END
FROM departments d
WHERE e.department = d.dept_name;

WITH new_rows AS (
    INSERT INTO employees(first_name, last_name, salary)
    VALUES
        ('Ava', 'Thompson', 70000),
        ('William', 'Anderson', 65000),
        ('Isabella', 'Moore', 60000),
        ('Benjamin', 'Taylor', 72000),
        ('Ethan', 'Carter', 68000)
    RETURNING emp_id
)
UPDATE employees
SET salary = salary * 1.1
WHERE emp_id IN (SELECT emp_id FROM new_rows);


CREATE TABLE employee_archive(
    LIKE employees INCLUDING ALL
);

INSERT INTO employee_archive
SELECT *
FROM employees
WHERE status = 'Inactive';

DELETE FROM employees
WHERE status = 'Inactive';


UPDATE projects p
SET end_date = end_date + INTERVAL '30 days'
WHERE budget > 50000
  AND (
      SELECT COUNT(*)
      FROM employees e
      JOIN departments d
        ON d.dept_name = e.department
      WHERE p.dept_id = d.dept_id
    ) > 3;











